---
- hosts: all
  vars_files:
    - system_requirements.yml
    - vars.yml
  gather_facts: false
  become: True

  tasks:

  - name: Create the project directory.
    file: state=directory path={{ project_root }}

  - name: Create project user.
    user: >
      home={{ project_root }}/home/
      name={{ project_name }}
      password={{ lookup('file', 'credentials/' + nickname + '/project_user_password_crypted') }} state=present
      shell=/bin/bash

  - name: Project user bash_profile file update.
    template: >
      src=configurations/bash_profile_project_user.j2
      dest={{ project_root }}/home/.profile
      backup=yes
      owner={{ project_name }}
      group={{ project_name }}
      mode=0644

  - name: Chown for the project directory.
    file: state=directory path={{ project_root }} owner={{ project_name }} group={{ project_name }}

  - name: Create the SSH directory.
    file: state=directory path={{ project_root }}/home/.ssh/ owner={{ project_name }} group={{ project_name }}
    when: vm == 0

  - name: Add {{ remote_host }} fingerprint to the SSH known_hosts.
    shell: "ssh-keyscan {{ remote_host }} >> /etc/ssh/ssh_known_hosts"
    when: vm == 0

  - name: Upload repository SSH key.
    copy: src=ssh/id_rsa dest={{ project_root }}/home/.ssh/id_rsa mode=0600 owner={{ project_name }} group={{ project_name }}
    when: vm == 0

  - name: Create project directories.
    file: group={{ project_name }} owner={{ project_name }} mode=755 state=directory path={{ project_root }}/{{ item }}
    with_items:
      - ""
      - "code"
      - "conf"
      - "logs"
      - "env"
      - "public/static"
      - "public/media"

  - name: Install required system packages.
    apt: pkg={{ item }} state=installed update-cache=yes
    with_items: '{{ system_packages }}'

  - name: Create database.
    become_user: postgres
    postgresql_db: >
      name={{ project_name }}
      encoding='UTF-8' 
      lc_collate='en_US.UTF-8' 
      lc_ctype='en_US.UTF-8' 
      template='template0'
    tags: 
      - database

  - name: Create database user.
    become_user: postgres
    postgresql_user: >
      db={{ project_name }} 
      name={{ project_name }} 
      password="{{ lookup('password', 'environments/' + nickname + '/DJANGO_DATABASE_PASSWORD length=20') }}"
    tags: 
      - database 

  - name: Disable default nginx server block.
    file: path=/etc/nginx/sites-enabled/default state=absent
    notify: restart nginx

  handlers:
    - name: restart nginx
      become: yes
      service: name=nginx state=restarted enabled=yes

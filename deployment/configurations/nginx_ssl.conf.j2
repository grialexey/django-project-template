server {

    server_name {{ server_hostname }};  

    client_max_body_size 15m;

    access_log {{ project_root }}/logs/nginx.access.log;
    error_log {{ project_root }}/logs/nginx.error.log; 

    # Deny illegal Host headers
    if ($host !~* ^({{ server_hostname }}|www.{{ server_hostname }})$ ) {
        return 444;
    }

    # Enable Gzip compression
    gzip on;

    # Compression level (1-9)
    gzip_comp_level 5;

    # Don't compress anything under 256 bytes
    gzip_min_length 256;

    # Compress output of these MIME-types
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;

    location /static/ {  
        alias {{ project_root }}/public/static/;  
        expires 7d;
    }  

    location /media/ {  
        alias {{ project_root }}/public/media/;  
        expires 30d;
    }  

    location  /robots.txt {
        alias {{ project_root }}/public/static/robots.txt;
    }

    location / {  
        proxy_pass http://{{ process_bind }};  
        proxy_set_header X-Forwarded-Host $server_name;  
        proxy_set_header X-Real-IP $remote_addr;  
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header P3P 'CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"';  
    }  

    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/{{ server_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ server_hostname }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    listen 443 ssl http2;
    server_name www.{{ server_hostname }};
    return 301 https://{{ server_hostname }}$request_uri;

    ssl_certificate /etc/letsencrypt/live/www.{{ server_hostname }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.{{ server_hostname }}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

server {
    if ($host = {{ server_hostname }}) {
        return 301 https://{{ server_hostname }}$request_uri;
    }

    server_name {{ server_hostname }};
    listen 80;
    return 404;
}

server {
    if ($host = www.{{ server_hostname }}) {
        return 301 https://{{ server_hostname }}$request_uri;
    }

    listen 80;
    server_name www.{{ server_hostname }};
    return 404;
}
